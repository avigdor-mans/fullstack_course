{"version":3,"sources":["services/blogs.js","reducers/msgReducer.js","reducers/blogReducer.js","services/users.js","services/login.js","reducers/userReducer.js","components/Msg.js","components/logs/Login.js","components/blogs/TitleBlogForm.js","components/Togglable.js","components/blogs/AdBlog.js","components/blogs/BlogsForm.js","components/blogs/FullBlogForm.js","components/logs/Logout.js","components/Menu.js","components/users/Users.js","components/users/User.js","App.js","reducers/store.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","put","id","user","setToken","newToken","remove","delete","toClear","setNotification","message","color","dispatch","clearTimeout","type","setTimeout","removeNotification","msgReducer","state","action","sortBlogs","blogs","sort","blogA","blogB","likes","addBlog","blogToAdd","blogService","newBlog","title","author","deleteBlog","blog","likeBlog","blogToUpdate","updateBlog","blogReducer","concat","filter","b","map","login","credentials","userLogin","username","password","loginService","window","localStorage","setItem","JSON","stringify","name","userReducer","Msg","notification","useSelector","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Login","useState","setUsername","setPassword","useDispatch","handleLogin","event","preventDefault","exception","className","Form","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","variant","TitleBlogForm","to","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","children","displayName","AdBlog","setTitle","setAuthor","url","setUrl","handleNewBlog","current","error","BlogsForm","ListGroup","Item","key","FullBlogForm","comment","setComment","useParams","history","useHistory","find","useEffect","push","hendleLikes","handleDelete","confirm","paddingTop","paddingLeft","border","borderWidth","size","Card","Header","as","Body","comments","c","InputGroup","FormControl","e","tmpBlog","addCommet","Logout","removeItem","Menu","Navbar","bg","Nav","Brand","Link","Text","Users","users","u","length","User","App","useRef","setUsers","loggedUserJSON","getItem","parse","userService","fetch","path","reducer","combineReducers","userResucer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6a83e96.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  \n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (newObject) => {\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, {...newObject, user: newObject.user.id })\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, setToken, remove }","let toClear = null\r\n\r\nexport const setNotification = (message, color) => {\r\n    return dispatch => {\r\n      if(toClear)\r\n        clearTimeout(toClear)\r\n      dispatch({ type:'disply', message:message, color: color })\r\n      toClear = setTimeout(() => {\r\n        dispatch(removeNotification())\r\n      }, 5000)\r\n    } \r\n  }\r\n  \r\n  export const removeNotification = () => {\r\n    return dispatch => {\r\n      dispatch({ type:'remove', message:'', color: 'white'})\r\n    }\r\n  }\r\n\r\nconst msgReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'disply' :\r\n            return action\r\n        case 'remove' : \r\n            return action\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default msgReducer","import blogService from '../services/blogs'\r\nimport { setNotification } from './msgReducer'\r\n\r\nconst sortBlogs = (blogs) => blogs.sort((blogA, blogB) => blogB.likes-blogA.likes)\r\n\r\nexport const initBlogs = () =>{\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({type: 'INITBLOGS', data: blogs})\r\n    }\r\n}\r\nexport const addBlog = (blogToAdd) => {\r\n    return async dispatch => {\r\n        const newBlog = await blogService.create(blogToAdd)\r\n        dispatch(setNotification(`a new blog ${newBlog.title} by ${newBlog.author} added`, 'green'))\r\n        dispatch({ type: 'ADD', data: newBlog})\r\n    }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n    return async dispatch => {\r\n        await blogService.remove(blog.id)\r\n        dispatch(setNotification(`The blog ${blog.title} have been deleted`, 'green'))\r\n        dispatch({ type: 'DELETE', data: blog.id })\r\n    }\r\n}\r\n\r\nexport const likeBlog = (blogToUpdate) => {\r\n    return async dispatch => {\r\n        const updateBlog = await blogService.update(blogToUpdate)\r\n        dispatch(setNotification(`now ${updateBlog.title} have ${updateBlog.likes} likes!`, 'green'))\r\n        dispatch({type: 'UPDATE', data: updateBlog})\r\n    }\r\n}\r\n\r\nexport const addCommet = (comment,blogToUpdate) => {\r\n    return async dispatch => {\r\n        const tmpBlog = {...blogToUpdate, comments: blogToUpdate.comments.concat(comment)}\r\n        const updateBlog = await blogService.update(tmpBlog)\r\n        dispatch(setNotification(`the comment: ${comment} is added to the blog ${updateBlog.title}`))\r\n        dispatch({type: 'UPDATE', data: updateBlog})\r\n    }\r\n}\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'INITBLOGS' :\r\n            return sortBlogs(action.data)\r\n        case 'ADD' :\r\n            return sortBlogs(state.concat(action.data))\r\n        case 'DELETE' :\r\n            return sortBlogs(state.filter((b)=> b.id!==action.data))\r\n        case 'UPDATE' :\r\n            return sortBlogs(state.map((b)=> b.id===action.data.id ? action.data : b))\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default blogReducer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { setNotification } from './msgReducer'\r\n\r\nexport const userLogin = ({username, password}) => {\r\n    return async dispatch => {\r\n        const user = await loginService.login({username,password})\r\n        window.localStorage.setItem('loggedBlogsappUser', JSON.stringify(user))\r\n        dispatch(setNotification(`Welcome ${user.name}`, 'green'))\r\n        dispatch({type: 'LOGIN', data: user})\r\n    }\r\n}\r\n\r\nexport const userLogout = () => {\r\n    return dispatch => {\r\n        window.localStorage.removeItem('loggedBlogsappUser')\r\n        dispatch({type: 'LOGOUT', data: null})\r\n    }\r\n}\r\n\r\nconst userReducer = (state=null, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN' :\r\n            blogService.setToken(action.data.token)\r\n            return action.data\r\n        case 'LOGOUT' :\r\n            return action.data\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default userReducer","\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Msg = () =>{\r\n\r\n  const notification = useSelector(state=>state.message)\r\n\r\n  const style = {\r\n    color: notification.color,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n  return   notification.type==='remove' ? null : <p style={style} >{notification.message}</p>\r\n}\r\n\r\nexport default Msg\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setNotification } from '../../reducers/msgReducer'\r\nimport { userLogin } from '../../reducers/userReducer'\r\nimport Msg from '../Msg'\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      dispatch(userLogin({username, password}))\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception){\r\n      dispatch(setNotification(exception.response, 'red'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <h2>Log in to application</h2>\r\n    <Msg />\r\n    <Form onSubmit={handleLogin} >\r\n      <Form.Group controlId=\"formBasicName\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control \r\n          type=\"text\" \r\n          placeholder=\"Enter username\" \r\n          value={username} \r\n          onChange={({ target }) => setUsername(target.value)} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={({ target }) => setPassword(target.value)} />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n    </div>)\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst TitleBlogForm = ({ blog }) => {\r\n\r\n  return (\r\n      <div>\r\n        <Link style={ {color:'black'} } to={`/blogs/${blog.id}`}> {`${blog.title} By ${blog.author}`} </Link>\r\n        <br/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TitleBlogForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Togglable = React.forwardRef((props,ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button variant=\"success\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} >\r\n        {props.children}\r\n        <Button variant=\"warning\" onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\nexport default Togglable","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {addBlog} from '../../reducers/blogReducer'\r\nimport {setNotification} from '../../reducers/msgReducer'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst AdBlog = React.forwardRef((props,ref) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleNewBlog = async () => {\r\n    ref.current.toggleVisibility()\r\n    const newBlog= {\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    }\r\n    try{\r\n      dispatch(addBlog(newBlog))\r\n      setTitle('')\r\n      setAuthor('')\r\n      setUrl('')\r\n    } catch (exception){\r\n      dispatch(setNotification(exception.response.data.error, 'red'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleNewBlog}>\r\n      <h3>create new blog</h3>\r\n      <Form.Group>\r\n        <Form.Label>title</Form.Label>\r\n        <Form.Control\r\n        type='text'\r\n        value={title}\r\n        onChange={({ target }) => setTitle(target.value)}\r\n         />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>author</Form.Label>\r\n        <Form.Control\r\n        type='text'\r\n        value={author}\r\n        onChange={({ target }) => setAuthor(target.value)}\r\n         />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>url</Form.Label>\r\n        <Form.Control\r\n        type='text'\r\n        value={url}\r\n        onChange={({ target }) => setUrl(target.value)}\r\n         />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n    </Form>)\r\n})\r\n\r\nexport default AdBlog","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport TitleBlogForm from './TitleBlogForm'\r\nimport Togglable from '../Togglable'\r\nimport AdBlog from './AdBlog'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst BlogsForm = React.forwardRef((props,ref) => {\r\n\r\n  const blogs = useSelector(state => state.blogs)\r\n\r\n  return (\r\n    <div>\r\n      <h1>blogs</h1>\r\n      <Togglable buttonLabel=\"new blog\" ref={ref} >\r\n        <AdBlog ref={ref} /> <br/>\r\n      </Togglable>\r\n      <br/>\r\n      <ListGroup variant=\"flush\" >\r\n        {blogs.map(blog => \r\n          <ListGroup.Item variant='light' ><TitleBlogForm key={blog.id} blog={blog} /></ListGroup.Item>\r\n        )}\r\n      </ListGroup>\r\n    </div>)\r\n})\r\n\r\nexport default BlogsForm\r\n\r\n\r\n        // <Router>\r\n        //   <Switch>\r\n        //     <Route path={`${path}/:id`} >\r\n        //     <div>\r\n        //       {blogs.map(blog =>\r\n        //       <Link style={padding} to={`/${url}/${blogs.id}`} >{blog.title}</Link>)}\r\n        //     </div>\r\n        //     </Route>\r\n        //     <Route exact path={path}>\r\n        //     <div>\r\n        //       {blogs.map(blog =>\r\n        //       <BlogForm key={blog.id} blog={blog} />)}\r\n        //     </div>\r\n        //     </Route>\r\n        //   </Switch>\r\n        // </Router>\r\n        ","import React, { useState, useEffect } from 'react'\r\nimport { Button, Card, FormControl, InputGroup, ListGroup } from 'react-bootstrap'\r\nimport { ArrowLeft, HandThumbsUp } from 'react-bootstrap-icons'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport {addCommet, likeBlog, deleteBlog} from '../../reducers/blogReducer'\r\nimport {setNotification} from '../../reducers/msgReducer'\r\n\r\nconst FullBlogForm = () => {\r\n    const [comment, setComment] = useState('')\r\n\r\n    const id = useParams().id\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const blog = useSelector(state => state.blogs.find(blog => blog.id === id))\r\n\r\n    useEffect(() => {\r\n      if (!blog)\r\n        history.push('/')\r\n    }, [blog, history])\r\n\r\n    const blogStyle = {\r\n      paddingTop: 10,\r\n      paddingLeft: 2,\r\n      border: 'solid',\r\n      borderWidth: 1,\r\n      marginBottom: 5\r\n    }\r\n    \r\n    const hendleLikes = async () => {\r\n        try{\r\n          dispatch(likeBlog({...blog, likes:blog.likes+1}))\r\n        }catch (exception){\r\n          dispatch(setNotification(exception.response, 'red'))\r\n        }\r\n    }\r\n    \r\n    const handleComment = (event) => {\r\n      event.preventDefault()\r\n        try{\r\n            dispatch(addCommet(comment, blog))\r\n            setComment('')\r\n        }catch (exception){\r\n            dispatch(setNotification(exception.response, 'red'))\r\n        }\r\n       \r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        if(window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)){\r\n          try{\r\n            dispatch(deleteBlog(blog))\r\n            history.push('/blogs')\r\n          }catch (exception){\r\n            dispatch(setNotification(exception.response.data.error, 'red'))\r\n          }\r\n        }\r\n    }\r\n    return(\r\n        <div style={blogStyle} className='blog'>\r\n          <Link to='/blogs' > <ArrowLeft color=\"royalblue\" size={40} /> </Link>\r\n          <br/>\r\n          <h2>{blog.title}</h2>\r\n          <h3>By {blog.author}</h3>\r\n          <br/>\r\n          <p>\r\n          {blog.url}\r\n          likes: {blog.likes} <Button id='like' onClick={hendleLikes}><HandThumbsUp size={20} /></Button>\r\n          <br/>\r\n          added by {blog.user.name}\r\n          </p>\r\n          <br/>\r\n\r\n          <div>\r\n            <Card>\r\n              <Card.Header as='h3'>comments</Card.Header>\r\n              <Card.Body>\r\n                <ListGroup>\r\n                  {blog.comments.map(c=>(<ListGroup.Item>{c}</ListGroup.Item>))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n            <br/>\r\n            <InputGroup>\r\n              <FormControl\r\n                type='text'\r\n                placeholder='add your comment'\r\n                value={comment}\r\n                onChange={(e)=>setComment(e.target.value)}\r\n              />\r\n              <Button variant='primary' onClick={handleComment}>Submit</Button>\r\n            </InputGroup>\r\n          </div>\r\n          <br/>\r\n          <Button variant='danger' onClick={handleDelete} >delete</Button>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default FullBlogForm","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\nimport { setNotification } from '../../reducers/msgReducer'\r\nimport { userLogout } from '../../reducers/userReducer'\r\n\r\nconst Logout = () => {\r\n\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleLogout = () => {\r\n        dispatch(userLogout())\r\n        dispatch(setNotification(`goodbye ${user.name}`, 'green'))\r\n        history.push('/')\r\n    }\r\n    return user !== null ? \r\n        <em>logged-in {user.name} <Button variant='dark' onClick={handleLogout} >logout</Button></em> \r\n        : null\r\n\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\"\r\nimport Logout from './logs/Logout'\r\n\r\nconst Menu = () => {\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\" >\r\n\r\n      <Nav>\r\n        <Navbar.Brand as={Link} to='/' >\r\n          blogs\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Brand as={Link} to='/users' >\r\n          users\r\n        </Navbar.Brand>\r\n      </Nav>\r\n\r\n      <Nav>\r\n        <Navbar.Text>\r\n          <Logout />\r\n        </Navbar.Text>\r\n      </Nav>\r\n\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Users = ({users}) => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>users</h1>\r\n      <table>\r\n        <tr>\r\n            <th>users</th>\r\n            <th>blogs created</th>\r\n        </tr>\r\n        {users.map(u=>\r\n            <tr key={u.id} >\r\n              <th><Link to={`/users/${u.id}`}>{u.name}</Link></th>\r\n              <th>{u.blogs.length}</th>\r\n            </tr>)}\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useParams } from \"react-router-dom\"\r\n\r\nconst User = ({users}) => {\r\n  const id = useParams().id\r\n  const user = users.find(u => u.id === id)\r\n\r\n  return(\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <h3>added blogs</h3>\r\n      <ul>\r\n        {user.blogs.map(b => \r\n          <li key = {b.id} >{b.title}</li>)}\r\n      </ul>\r\n      <Link to='/users'>go back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport {initBlogs} from './reducers/blogReducer'\nimport userService from './services/users'\nimport Login from './components/logs/Login'\nimport Msg from './components/Msg'\nimport BlogsForm from './components/blogs/BlogsForm'\nimport FullBlogForm from './components/blogs/FullBlogForm'\nimport Menu from './components/Menu'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\n\nconst App = () => {\n  const ref = useRef()\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const blogs = useSelector(state => state.blogs)\n  const [users, setUsers] = useState(null)\n  useEffect(() => {\n    dispatch(initBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogsappUser')\n    if (loggedUserJSON) {\n      dispatch({type: 'LOGIN', data: JSON.parse(loggedUserJSON)})\n    }\n  }, [dispatch])\n\n  \n  useEffect(() => {\n    const fetch = async () => {\n      const users = await userService.getAll()\n      setUsers(users)\n    }\n    fetch()\n  }, [blogs])\n\n  const loginForm = () => (\n      <Login />\n  )\n\n  const routerForm = () => (\n    <Router>\n    <Menu />\n    <Msg />\n\n    <Switch>\n      <Route path='/users/:id' >\n        <User users={users} />\n      </Route>\n\n      <Route path='/users' >\n        <Users users={users} />\n      </Route>\n      \n      <Route path='/blogs/:id' >\n        <FullBlogForm />\n      </Route>\n\n      <Route path='/' >\n        <div>\n          <BlogsForm ref={ref} />\n        </div>\n      </Route>      \n\n    </Switch>\n  </Router>\n  )\n\n   return user===null ? loginForm() : routerForm()\n\n}\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport msgReducer from './msgReducer'\r\nimport blogReducer from './blogReducer'\r\nimport userResucer from './userReducer'\r\n\r\nconst reducer = combineReducers({\r\n    message: msgReducer,\r\n    blogs: blogReducer,\r\n    user: userResucer\r\n})\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './reducers/store'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'))"],"sourceRoot":""}